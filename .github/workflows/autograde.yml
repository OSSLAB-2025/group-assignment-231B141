name: Autograding

on:
  push:
  workflow_dispatch:

jobs:
  autograde:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Ensure jq is available
        run: |
          sudo apt-get update -y && sudo apt-get install -y jq

      - name: Initialize score
        id: init
        run: |
          echo "SCORE=0" >> $GITHUB_ENV

      # 1) File exists
      - name: Check if team_greetings.md exists
        run: |
          if [ -f team_greetings.md ]; then
            echo "SCORE=$((SCORE+1))" >> $GITHUB_ENV
            echo "T1=1" >> $GITHUB_ENV
          else
            echo "T1=0" >> $GITHUB_ENV
          fi

      # 2) Roll number format
      - name: Check roll number format
        run: |
          if grep -Eq "[0-9]{3}[A-Z][0-9]{3}" team_greetings.md 2>/dev/null; then
            echo "SCORE=$((SCORE+1))" >> $GITHUB_ENV
            echo "T2=1" >> $GITHUB_ENV
          else
            echo "T2=0" >> $GITHUB_ENV
          fi

      # 3) At least 3 unique roll numbers
      - name: Check roll number count
        run: |
          COUNT=$(grep -Eo "[0-9]{3}[A-Z][0-9]{3}" team_greetings.md 2>/dev/null | sort -u | wc -l)
          if [ "$COUNT" -gt 2 ]; then
            echo "SCORE=$((SCORE+1))" >> $GITHUB_ENV
            echo "T3=1" >> $GITHUB_ENV
          else
            echo "T3=0" >> $GITHUB_ENV
          fi

      # 4) Branch name format (+2)
      - name: Check branch name format
        run: |
          BRANCH="${GITHUB_REF#refs/heads/}"
          if [[ "$BRANCH" =~ ^feature/[0-9]{3}[A-Z][0-9]{3}$ ]]; then
            echo "SCORE=$((SCORE+2))" >> $GITHUB_ENV
            echo "T4=2" >> $GITHUB_ENV
          else
            echo "T4=0" >> $GITHUB_ENV
          fi

      # 5) Collaborators via API (+2)
      - name: Check collaborators via GitHub API
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER="${GH_REPO%/*}"
          REPO="${GH_REPO#*/}"
          RESP=$(curl -sf -H "Authorization: token ${GH_TOKEN}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/collaborators" || echo "")
          COLLAB_COUNT=$(echo "$RESP" | jq 'length')
          if [ "$COLLAB_COUNT" -ge 2 ]; then
            echo "SCORE=$((SCORE+2))" >> $GITHUB_ENV
            echo "T5=2" >> $GITHUB_ENV
          else
            echo "T5=0" >> $GITHUB_ENV
          fi

      # 6) Unique commit authors (+3)
      - name: Check unique commit authors
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          OWNER="${GH_REPO%/*}"
          REPO="${GH_REPO#*/}"
          RESP=$(curl -sf -H "Authorization: token ${GH_TOKEN}" \
            "https://api.github.com/repos/${OWNER}/${REPO}/commits?per_page=100" || echo "")
          AUTHORS=$(echo "$RESP" | jq -r '[ .[].author.login, .[].committer.login ] | map(select(. != null)) | unique | .[]?')
          COUNT=$(echo "$AUTHORS" | grep -c . || true)
          if [ "$COUNT" -ge 2 ]; then
            echo "SCORE=$((SCORE+3))" >> $GITHUB_ENV
            echo "T6=3" >> $GITHUB_ENV
          else
            echo "T6=0" >> $GITHUB_ENV
          fi

      - name: Save score for GitHub Classroom
        run: |
          mkdir -p .github/classroom
          cat > .github/classroom/results.json <<EOF
          {
            "version": 1,
            "tests": [
              { "name": "team_greetings.md exists", "score": ${T1:-0}, "max_score": 1 },
              { "name": "Roll number format",       "score": ${T2:-0}, "max_score": 1 },
              { "name": "3+ unique roll numbers",   "score": ${T3:-0}, "max_score": 1 },
              { "name": "Branch name feature/ID",   "score": ${T4:-0}, "max_score": 2 },
              { "name": "2+ collaborators (API)",   "score": ${T5:-0}, "max_score": 2 },
              { "name": "2+ commit authors (API)",  "score": ${T6:-0}, "max_score": 3 }
            ],
            "summary": "Total score ${SCORE:-0} out of 10"
          }
          EOF
